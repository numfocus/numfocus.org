---
import Button from '@components/Atoms/Button';
import Container from '@components/Container.astro';
import Hero from '@components/Hero.astro';
import BodyContent from '@components/TipTapRender/BodyContent';
import { TipTapRender } from '@components/TipTapRender/TipTapRender';
import { readItems } from '@directus/sdk';
import SingleArticleLayout from '@layouts/SingleArticleLayout.astro';
import { injectDataIntoContent } from 'directus-extension-flexible-editor/content';
import type { Page, PageHero } from 'env';
import directus from '../../../lib/directus';

export async function getStaticPaths() {
  const pages = await directus.request(
    readItems('articles', {
      fields: [
        'id',
        'title',
        'slug',
        'body_content',
        'editor_nodes.id',
        'editor_nodes.collection',
        'hero.item.heading',
        'hero.item.content',
        'hero.item.image',
        'seo',
        { editor_nodes: ['*.*.*.*'] },
      ],
    })
  );

  const cleanPages = pages.map((page) => {
    injectDataIntoContent(page.editor_nodes, page.body_content);

    return page;
  });

  return cleanPages.map((page) => ({
    params: { slug: page.slug },
    props: page,
  }));
}

const page = Astro.props;

---

<SingleArticleLayout
  title={page.title}
  seo={{
    title: page.seo?.title || page.title,
    meta_description: page.seo?.meta_description,
    og_image: page.seo?.og_image,
  }}
>
  <Container removeMargins>
    <Button
      button={{
        style: 'light',
        variant: 'default',
        link: {
          text: `Back to Articles`,
          type_of_link: 'internal',
          slug: 'articles'
        }
      }}
      arrow="left"
    />
  </Container>
  <Hero
    pageHero={{
      id: page.id,
      title: page.title,
      headline: page.hero[0].item.heading,
      rich_text: page.hero[0].item.content,
      image: page.hero[0].item.image,
    }}
  />
  <div class="overflow-auto">
    <TipTapRender handlers={BodyContent} node={page.body_content} />
  </div>
</SingleArticleLayout>
