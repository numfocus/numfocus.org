---
import Container from '@components/Container.astro';
import Hero from '@components/Hero.astro';
import { readItems, readSingleton } from '@directus/sdk';
import ArticleGridLayout from '@layouts/ArticleGridLayout.astro';
import { getArticlesMeta } from '@utils/getArticlesMeta';
import directus from '../../../lib/directus';

import { Image, Picture } from 'astro:assets';
import getAssetUrl from '@utils/getAssetUrl';
import getPageHero from '@utils/getPageHero';
import getPageSeo from '@utils/getPageSeo';
import type { Article } from 'env';

const global = await directus.request(readSingleton('General'));

const slug = Astro.routePattern.substring(1);

const pageHero = await getPageHero(slug);
const pageSeo = await getPageSeo(slug);
const articles = await getArticlesMeta();

const articleTypes = {
  singular: {
    news: 'News and Updates',
    case_study: 'Case Study',
    press_release: 'Press Release',
    community_update: 'Community Update',
    sponsor_highlight: 'Sponsor Highlight',
    member_highlight: 'Member Highlight',
    opinion: 'Opinion',
  },
  pluralTabs: {
    all: 'All Articles',
    news: 'News and Updates',
    case_study: 'Case Studies',
    press_release: 'Press Releases',
    community_update: 'Community Updates',
    sponsor_highlight: 'Sponsor Highlights',
    member_highlight: 'Member Highlights',
    opinion: 'Opinions',
  },
};

// for (const [key, value] of Object.entries(articleTypes)) {
//   console.log(value);
// }

// Object.values(articleTypes).map((type) => {
//   console.log(type);
// });
---

<ArticleGridLayout
  title={`Articles | ${global.site_name} - ${global.site_subheader}`}
  seo={pageSeo}
>
  <Hero pageHero={pageHero} />
  <Container>
    <div class="bg-white">
      <div class="mx-auto max-w-7xl px-6 lg:px-8">
        <div class="article-grid-filter mt-8">
          <h4 class="text-lg">Filter Articles</h4>
          <div class="grid grid-cols-1 lg:hidden">
            <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
            <select
              aria-label="Select a tab"
              class="col-start-1 row-start-1 w-full appearance-none rounded-md bg-white py-2 pr-8 pl-3 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
            >
              {
                Object.values(articleTypes.pluralTabs).map((type) => (
                  <option>{type}</option>
                ))
              }
            </select>
            <svg
              class="pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end fill-gray-500"
              viewBox="0 0 16 16"
              fill="currentColor"
              aria-hidden="true"
              data-slot="icon"
            >
              <path
                fill-rule="evenodd"
                d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z"
                clip-rule="evenodd"></path>
            </svg>
          </div>
          <div class="hidden lg:block">
            <div class="border-b border-gray-200">
              <nav class="-mb-px flex space-x-4" aria-label="Tabs">
                {
                  Object.values(articleTypes.pluralTabs).map((type) => (
                    <a
                      href="#"
                      class="border-b-2 border-transparent px-1 py-4 text-sm font-medium whitespace-nowrap text-gray-500 hover:border-gray-300 hover:text-gray-700"
                    >
                      {type}
                    </a>
                  ))
                }
                <!-- Current: "border-indigo-500 text-indigo-600", Default: "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700" -->
              </nav>
            </div>
          </div>
        </div>
        <div
          class="mx-auto mt-16 grid max-w-2xl grid-cols-1 gap-x-8 gap-y-20 lg:mx-0 lg:max-w-none lg:grid-cols-3"
        >
          {
            articles.map((article) => (
              <article class="">
                <a href={`${Astro.url}${article.slug}`}>
                  {!!article.image && (
                    <div class="relative w-full hover:shadow-sm rounded-2xl transition">
                      <Image
                        src={`${article.image}?width=500`}
                        alt=""
                        class="aspect-video w-full  rounded-2xl bg-gray-100 object-cover sm:aspect-2/1 lg:aspect-3/2"
                        inferSize
                      />
                      <div class="absolute inset-0 rounded-2xl ring-1 ring-gray-900/10 ring-inset" />
                    </div>
                  )}
                </a>
                <div class="mt-4 flex items-center gap-x-4 text-xs">
                  <time datetime="2020-03-16" class="text-gray-500">
                    {article.date.toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric',
                    })}
                  </time>
                  <span class="relative z-10 rounded-md bg-gray-50 px-3 py-1.5 font-medium text-gray-600 hover:bg-gray-100">
                    {article.type &&
                      articleTypes.singular[
                        article.type as keyof typeof articleTypes.singular
                      ]}
                  </span>
                </div>
                <div class="max-w-xl">
                  <a href={`${Astro.url}${article.slug}`}>
                    <div class="group relative">
                      <h3 class="mt-3 text-lg/6 font-semibold text-gray-900 group-hover:text-gray-600">
                        <span class="absolute inset-0" />
                        {article.title}
                      </h3>
                    </div>
                    <div
                      class="mt-5 line-clamp-3 text-sm/6 text-gray-600"
                      set:html={article.content}
                    />
                  </a>
                </div>
              </article>
            ))
          }
        </div>
      </div>
    </div>
  </Container>
</ArticleGridLayout>
