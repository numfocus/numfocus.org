---
import Container from '@components/layout/Container.astro';
import Hero from '@components/layout/Hero.astro';
import directus from '@directus/directus';
import { readItems, readSingleton } from '@directus/sdk';
import getPageHero from '@utils/getPageHero';
import { FileDown } from 'lucide-react';
import PageLayout from '../layouts/PageLayout.astro';

import {
  Table,
  TableBody,
  TableCaption,
  TableCell,
  TableFooter,
  TableHead,
  TableHeader,
  TableRow,
} from '@components/ui/table';
import getPageSeo from '@utils/getPageSeo';

const global = await directus.request(readSingleton('General'));
const files = await directus.request(readItems('files'));
const fileCategories = await directus.request(readItems('file_categories'));

// console.log(files[0].description.blocks[0].data.text)

const assetBaseUrl = `${import.meta.env.DIRECTUS_URL}/assets/`;

const slug = Astro.routePattern.substring(1);
const seo = await getPageSeo(slug);

const pageHero = await getPageHero(slug);
---

<PageLayout
  title={`Documentation | ${global.site_name} - ${global.site_subheader}`}
  seo={seo}
>
  <Hero pageHero={pageHero} />
  <div class="my-24">
    <Container>
      {
        fileCategories.map((category) => (
          <div class="category-container mb-12">
            <h2 class="text-2xl font-semibold py-2">
              {category.file_category}
            </h2>
            <div
              class="text-sm font-normal mb-4"
              set:html={category.category_description}
            />
            <Table className="border outline-1 outline-gray-400 overflow-hidden">
              <TableCaption />
              <TableHeader>
                <TableRow>
                  <TableHead className="">Document</TableHead>
                  <TableHead>Description</TableHead>
                  <TableHead>Year</TableHead>
                  <TableHead className="text-right">Download</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {files
                  .filter((e) => e.file_category === category.id)
                  .map((file) => (
                    <TableRow key={file.id} className="h-16">
                      <TableCell className="font-semibold">
                        {file.file_name}
                      </TableCell>
                      <TableCell
                        className="text-xs md:text-sm"
                        set:html={file.description?.blocks[0].data.text}
                      />
                      <TableCell>{file.year}</TableCell>
                      <TableCell className="text-right ">
                        <a
                          class="flex place-content-center w-full  text-brand-teal hover:text-teal-800  transition"
                          href={`${assetBaseUrl}${file.file}?download`}
                          target="_blank"
                          download={file.name}
                        >
                          <FileDown
                            height={28}
                            width={28}
                            className="text-right"
                          />
                        </a>
                      </TableCell>
                    </TableRow>
                  ))}
              </TableBody>
              <TableFooter></TableFooter>
            </Table>
          </div>
        ))
      }
    </Container>
  </div>
</PageLayout>
