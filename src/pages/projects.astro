---
import Container from '@components/Container.astro';
import ProjectsLayout from '@layouts/ProjectsLayout.astro';
import ProjectGrid from '@components/ProjectGrid/ProjectGrid';
import Hero from '@components/Hero.astro';
import getPageHero from '@utils/getPageHero';
import { getCollection } from 'astro:content';
import { readSingleton } from '@directus/sdk';

import directus from '../../lib/directus';
import type { Project } from 'env';
import projectsSchema from '../data/projects/projects.schema.json';
import FollowUs from '@components/FollowUs.astro';

const projects: Project[] = await getCollection('projects');

const global = await directus.request(readSingleton('General'));

const { type } = projectsSchema.properties;

type filterOptions = {
  features: string[];
  industries: string[];
  languages: string[];
  type: string[];
};

const filterOptions: filterOptions = {
  features: [],
  industries: [],
  languages: [],
  type: type.enum,
};

projects.map((project) => {
  project.data.features?.map((feature) => {
    if (!filterOptions.features.includes(feature)) {
      filterOptions.features.push(feature);
    }
  });
  project.data.industries?.map((industry) => {
    if (!filterOptions.industries.includes(industry)) {
      filterOptions.industries.push(industry);
    }
  });
  project.data.languages?.map((language) => {
    if (!filterOptions.languages.includes(language)) {
      filterOptions.languages.push(language);
    }
  });
});

console.log(filterOptions);

const pageHero = await getPageHero('projects');
---

<ProjectsLayout
  title={`Projects | ${global.site_name} - ${global.site_subheader}`}
>
  <Hero pageHero={pageHero} />
  <ProjectGrid {filterOptions} {projects} client:load />
  <FollowUs />
</ProjectsLayout>
