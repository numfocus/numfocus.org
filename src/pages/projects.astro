---
import { getCollection } from 'astro:content';
import Hero from '@components/layout/Hero.astro';
import ProjectGrid from '@components/projects/ProjectGrid';
import { readSingleton } from '@directus/sdk';
import ProjectsLayout from '@layouts/ProjectsLayout.astro';
import getPageHero from '@utils/getPageHero';
import getPageSeo from '@utils/getPageSeo';

import FollowUs from '@components/shared/FollowUs.astro';
import directus from '@directus/directus';
import type { Project } from 'env';
import projectsSchema from '../data/projects/projects.schema.json';

const projects: Project[] = await getCollection('projects');

const global = await directus.request(readSingleton('General'));

const { type } = projectsSchema.properties;

type filterOptions = {
	features: string[];
	industries: string[];
	languages: string[];
	type: string[];
};

const filterOptions: filterOptions = {
	features: [],
	industries: [],
	languages: [],
	type: type.enum,
};

projects.map((project) => {
	project.data.features?.map((feature) => {
		if (!filterOptions.features.includes(feature)) {
			filterOptions.features.push(feature);
		}
	});
	project.data.industries?.map((industry) => {
		if (!filterOptions.industries.includes(industry)) {
			filterOptions.industries.push(industry);
		}
	});
	project.data.languages?.map((language) => {
		if (!filterOptions.languages.includes(language)) {
			filterOptions.languages.push(language);
		}
	});
});

filterOptions.features.sort();
filterOptions.industries.sort();
filterOptions.languages.sort();

const pageHero = await getPageHero('projects');
const pageSeo = await getPageSeo('projects');
---

<ProjectsLayout
	title={`Projects | ${global.site_name} - ${global.site_subheader}`}
	seo={pageSeo}
>
	<Hero pageHero={pageHero} />
	<ProjectGrid
		{filterOptions}
		{projects}
		featuredProject={global.featured_project}
		client:load
	/>
	<FollowUs />
</ProjectsLayout>
