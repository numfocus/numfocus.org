---
import { getImage } from 'astro:assets';
import { TipTapRender } from '@components/content/TipTapRender';
import type { TipTapNode } from '@components/content/TipTapRender';
import BodyContent from '@components/content/TipTapRender/BodyContent';
import Hero from '@components/layout/Hero.astro';
import SponsorGrid from '@components/sponsors/SponsorGrid';
import directus from '@directus/directus';
import { readSingleton } from '@directus/sdk';
import BaseLayout from '@layouts/BaseLayout.astro';
import getPageContent from '@utils/getPageContent';
import getPageHero from '@utils/getPageHero';
import getPageSeo from '@utils/getPageSeo';
import getPageStub from '@utils/getPageStub';
import getSponsors from '@utils/getSponsors';
import type { Page, Sponsor } from 'env';

const global = await directus.request(readSingleton('General'));
const parent = await getPageStub('support');

const pageHero = await getPageHero('sponsors-and-members');
const pageSeo = await getPageSeo('sponsors-and-members');
const pageContent = await getPageContent('sponsors-and-members');

const sponsors = await getSponsors();
---

<BaseLayout
	title={`${pageHero.title} | ${global.site_name} - ${global.site_subheader}`}
	seo={pageSeo}
>
	<Hero pageHero={pageHero} parent={parent as Page} />
	{
		!!pageContent && (
			<div>
				<TipTapRender handlers={BodyContent} node={pageContent as TipTapNode} />
			</div>
		)
	}
	<SponsorGrid sponsors={sponsors as Sponsor[]} />
</BaseLayout>
