---
import { getImage } from 'astro:assets';
import Container from '@components/Container.astro';
import Hero from '@components/Hero.astro';
import SponsorGrid from '@components/SponsorGrid/SponsorGrid';
import directus from '@directus/directus';
import { readItems, readSingleton } from '@directus/sdk';
import BaseLayout from '@layouts/BaseLayout.astro';
import getAssetUrl from '@utils/getAssetUrl';
import getPageContent from '@utils/getPageContent';
import getPageHero from '@utils/getPageHero';
import getPageSeo from '@utils/getPageSeo';
import type { Sponsor } from 'env';

const slug = Astro.routePattern.substring(1);

const global = await directus.request(readSingleton('General'));

const pageHero = await getPageHero(slug);
const pageSeo = await getPageSeo(slug);
const pageContent = await getPageContent(slug);

const sponsors = await directus.request(readItems('sponsors'));

const imagePromises = sponsors.map(({ logo, ...rest }) => {
  return new Promise((resolve) => {
    getImage({ src: getAssetUrl(logo), inferSize: true }).then((fetchedImage) =>
      resolve({
        logo: fetchedImage?.src,
        ...rest,
      })
    );
  });
});

const sponsorsWithImages = await Promise.all(imagePromises);
---

<BaseLayout
  title={`${pageHero.title} | ${global.site_name} - ${global.site_subheader}`}
  seo={pageSeo}
>
  <Hero pageHero={pageHero} />
  <SponsorGrid sponsors={sponsorsWithImages as Sponsor[]} client:load />
</BaseLayout>
